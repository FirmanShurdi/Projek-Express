{"version":3,"sources":["kategori.js"],"names":["express","require","router","Router","conn","get","req","res","sql","query","err","objek","kategori","render","post","body","nama","kategori_id","deskripsi","gambar","audio","redirect","id","params","results","module","exports"],"mappings":"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","sourcesContent":["const express = require('express');\r\nconst router = express.Router();\r\nconst conn = require('../db');\r\n\r\n// INDEX\r\nrouter.get('/', (req, res) => {\r\n  const sql = `\r\n    SELECT o.id, o.nama, o.kategori_id, o.deskripsi, o.gambar, o.audio, k.nama_kategori \r\n    FROM objek o \r\n    JOIN kategori k ON o.kategori_id = k.id\r\n  `;\r\n  conn.query(sql, (err, objek) => {\r\n    if (err) throw err;\r\n    conn.query('SELECT * FROM kategori', (err, kategori) => {\r\n      if (err) throw err;\r\n      res.render('kategori/index', { objek, kategori });\r\n    });\r\n  });\r\n});\r\n\r\n// CREATE FORM\r\nrouter.get('/create', (req, res) => {\r\n  conn.query('SELECT * FROM kategori', (err, kategori) => {\r\n    if (err) throw err;\r\n    res.render('kategori/create', { kategori });\r\n  });\r\n});\r\n\r\n// CREATE POST\r\nrouter.post('/create', (req, res) => {\r\n  const { nama, kategori_id, deskripsi, gambar, audio } = req.body;\r\n  const sql = `\r\n    INSERT INTO objek (nama, kategori_id, deskripsi, gambar, audio) \r\n    VALUES (?, ?, ?, ?, ?)\r\n  `;\r\n  conn.query(sql, [nama, kategori_id, deskripsi, gambar, audio], (err) => {\r\n    if (err) throw err;\r\n    res.redirect('/kategori');\r\n  });\r\n});\r\n\r\n// EDIT FORM\r\nrouter.get('/edit/:id', (req, res) => {\r\n  const id = req.params.id;\r\n  conn.query('SELECT * FROM objek WHERE id = ?', [id], (err, results) => {\r\n    if (err) throw err;\r\n    const objek = results[0];\r\n    conn.query('SELECT * FROM kategori', (err, kategori) => {\r\n      if (err) throw err;\r\n      res.render('kategori/edit', { objek, kategori });\r\n    });\r\n  });\r\n});\r\n\r\n// EDIT POST\r\nrouter.post('/edit/:id', (req, res) => {\r\n  const id = req.params.id;\r\n  const { nama, kategori_id, deskripsi, gambar, audio } = req.body;\r\n  const sql = `\r\n    UPDATE objek \r\n    SET nama = ?, kategori_id = ?, deskripsi = ?, gambar = ?, audio = ? \r\n    WHERE id = ?\r\n  `;\r\n  conn.query(sql, [nama, kategori_id, deskripsi, gambar, audio, id], (err) => {\r\n    if (err) throw err;\r\n    res.redirect('/kategori');\r\n  });\r\n});\r\n\r\n// DELETE\r\nrouter.get('/delete/:id', (req, res) => {\r\n  conn.query('DELETE FROM objek WHERE id = ?', [req.params.id], (err) => {\r\n    if (err) throw err;\r\n    res.redirect('/kategori');\r\n  });\r\n});\r\n\r\nmodule.exports = router;\r\n"],"file":"kategori.dev.js"}