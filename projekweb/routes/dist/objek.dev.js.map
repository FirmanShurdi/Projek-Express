{"version":3,"sources":["objek.js"],"names":["express","require","router","Router","db","get","req","res","sql","query","err","results","console","error","status","send","render","kategoriList","kategoriNama","kategori","page","parseInt","limit","offset","tampilkanSemua","all","countSql","dataSql","whereClause","queryParams","push","countResult","totalItems","total","totalPages","Math","ceil","fullDataSql","dataParams","objekList","excludeIds","map","obj","id","carouselSql","carouselParams","length","placeholders","join","carouselItems","currentPage","kategoriAktif","json","objekId","params","message","objek","module","exports"],"mappings":"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","sourcesContent":["var express = require('express');\r\nvar router = express.Router();\r\nvar db = require('../db');\r\n\r\n// Route: Tampilkan semua kategori\r\nrouter.get('/kategori', (req, res) => {\r\n  var sql = 'SELECT * FROM kategori';\r\n  db.query(sql, (err, results) => {\r\n    if (err) {\r\n      console.error('Gagal mengambil kategori:', err);\r\n      return res.status(500).send('Gagal memuat kategori');\r\n    }\r\n    res.render('kategori/index', { kategoriList: results });\r\n  });\r\n});\r\n\r\n// Route utama: GET /objek?kategori=buah&page=2\r\nrouter.get('/', (req, res) => {\r\n  var kategoriNama = req.query.kategori || null;\r\n  var page = parseInt(req.query.page) || 1;\r\n  var limit = 6;\r\n  var offset = (page - 1) * limit;\r\n  var tampilkanSemua = req.query.all === 'true';\r\n\r\n  let countSql = 'SELECT COUNT(*) AS total FROM objek o LEFT JOIN kategori k ON o.kategori_id = k.id';\r\n  let dataSql = 'SELECT o.*, k.nama_kategori FROM objek o LEFT JOIN kategori k ON o.kategori_id = k.id';\r\n  let whereClause = '';\r\n  let queryParams = [];\r\n\r\n  if (kategoriNama) {\r\n    whereClause = ' WHERE k.nama_kategori = ? ';\r\n    queryParams.push(kategoriNama);\r\n  }\r\n\r\n  // Query total count untuk pagination\r\n  db.query(countSql + whereClause, queryParams, (err, countResult) => {\r\n    if (err) {\r\n      console.error('Gagal mengambil jumlah data:', err);\r\n      return res.status(500).send('Gagal memuat data');\r\n    }\r\n\r\n    var totalItems = countResult[0].total;\r\n    var totalPages = Math.ceil(totalItems / limit);\r\n    let fullDataSql;\r\n    let dataParams;\r\n\r\n    if (tampilkanSemua) {\r\n      fullDataSql = dataSql + whereClause + ' ORDER BY o.id DESC';\r\n      dataParams = queryParams;\r\n      page = 1; // reset halaman ke 1\r\n    } else {\r\n      fullDataSql = dataSql + whereClause + ' ORDER BY o.id DESC LIMIT ? OFFSET ?';\r\n      dataParams = [...queryParams, limit, offset];\r\n    }\r\n\r\n    db.query(fullDataSql, [...queryParams, limit, offset], (err, objekList) => {\r\n      if (err) {\r\n        console.error('Gagal mengambil data objek:', err);\r\n        return res.status(500).send('Gagal memuat objek');\r\n      }\r\n\r\n      // Ambil daftar ID objek utama untuk dikecualikan dari carousel\r\n      const excludeIds = objekList.map(obj => obj.id);\r\n\r\n      // Bangun query carousel dengan pengecualian\r\n      let carouselSql = `\r\n        SELECT o.*, k.nama_kategori\r\n        FROM objek o\r\n        LEFT JOIN kategori k ON o.kategori_id = k.id\r\n      `;\r\n      let carouselParams = [];\r\n\r\n      if (excludeIds.length > 0) {\r\n        const placeholders = excludeIds.map(() => '?').join(', ');\r\n        carouselSql += ` WHERE o.id NOT IN (${placeholders}) `;\r\n        carouselParams = excludeIds;\r\n      }\r\n\r\n      carouselSql += ' ORDER BY RAND() LIMIT 10';\r\n\r\n      db.query(carouselSql, carouselParams, (err, carouselItems) => {\r\n        if (err) {\r\n          console.error('Gagal mengambil carousel:', err);\r\n          return res.status(500).send('Gagal memuat carousel');\r\n        }\r\n\r\n        // Ambil semua kategori\r\n        db.query('SELECT * FROM kategori', (err, kategoriList) => {\r\n          if (err) {\r\n            console.error('Gagal mengambil kategori:', err);\r\n            return res.status(500).send('Gagal memuat kategori');\r\n          }\r\n\r\n          res.render('objek', {\r\n            objekList,\r\n            carouselItems,\r\n            totalPages,\r\n            currentPage: page,\r\n            kategoriAktif: kategoriNama,\r\n            kategoriList,\r\n            tampilkanSemua\r\n          });\r\n        });\r\n      });\r\n    });\r\n  });\r\n});\r\n\r\n// Route: Data JSON semua objek (untuk AJAX \"Tampilkan Semua\")\r\nrouter.get('/semua', (req, res) => {\r\n  const sql = `\r\n    SELECT o.*, k.nama_kategori\r\n    FROM objek o\r\n    LEFT JOIN kategori k ON o.kategori_id = k.id\r\n    ORDER BY o.id DESC\r\n  `;\r\n  db.query(sql, (err, results) => {\r\n    if (err) {\r\n      console.error('Gagal mengambil semua objek:', err);\r\n      return res.status(500).json({ error: 'Gagal mengambil data' });\r\n    }\r\n    res.json(results);\r\n  });\r\n});\r\n\r\n// Route: Detail objek berdasarkan ID\r\nrouter.get('/:id', (req, res) => {\r\n  const objekId = req.params.id;\r\n\r\n  const sql = `\r\n    SELECT o.*, k.nama_kategori \r\n    FROM objek o \r\n    LEFT JOIN kategori k ON o.kategori_id = k.id \r\n    WHERE o.id = ?\r\n  `;\r\n\r\n  db.query(sql, [objekId], (err, results) => {\r\n    if (err) {\r\n      console.error('Gagal mengambil detail objek:', err);\r\n      return res.status(500).send('Gagal memuat detail objek');\r\n    }\r\n\r\n    if (results.length === 0) {\r\n      return res.status(404).render('error', { message: 'Objek tidak ditemukan' });\r\n    }\r\n\r\n    const objek = results[0];\r\n    res.render('detail', { objek });\r\n  });\r\n});\r\n\r\nmodule.exports = router;\r\n"],"file":"objek.dev.js"}