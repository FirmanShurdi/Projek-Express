{"version":3,"sources":["users.js"],"names":["express","require","router","Router","get","req","res","connection","err","rows","console","log","flash","message","query","length","render","data","messages","error","post","_req$body","body","username","password","email","role","params","id","redirect","user","_req$body2","module","exports"],"mappings":"aAAA,IAAMA,QAAUC,QAAQ,WAClBC,OAASF,QAAQG,SADjBH,WAAUC,QAAQ,SAKxBC,OAAOE,IAAI,IAAK,SAACC,EAAKC,GAHtBC,WAAMA,MAAaN,uCAEnB,SAAAO,EAAAC,GAGI,GAAID,EADND,OAEIG,QAAQC,IAAI,SAAUH,GAHtBH,EAANO,MAAgB,QAAA,yBAAcJ,EAAAK,SACjBC,EAAAA,SAAM,KAOfJ,QAAQC,IAAI,yBAA0BF,EAAKM,QAHzCT,EAAAU,OAAOV,cAAP,CACDW,KAAAR,EAMCS,SAAU,CAJZR,QAAYL,EAAAO,MAAA,WAMRO,MAAOd,EAAIO,MAAM,gBAGtBV,OAhBDE,IAAA,UAAA,SAAAC,EAAAC,GADFA,EAqBAU,OAAA,kBAGCd,OAEDkB,KAAA,SAAA,SAAAf,EAAAC,GAAA,IAAAe,EAE8ChB,EAAIiB,KAD3CF,EAAK,CAAAG,SADZF,EAEUE,SADYC,SADtBH,EAEoBG,SADQlB,MAD5Be,EAE8BI,MADMC,KADpCL,EAEqCK,MADDnB,WAC1BgB,MAD0B,0BAAAN,EAAA,SAAAT,GAChBgB,EAAUC,EAAAA,MADM,QACNA,yBADMjB,EAAAK,SAE5BI,EAAIL,MAAG,UAAA,2BAAYY,EAAAA,SAAAA,cAGvBtB,OAAAE,IAAA,YAAS,SAAAC,EAAAC,GACPD,IAAAA,EAAIO,EAAMe,OAAVC,GAEAvB,WAAIO,MAAM,mCAAV,CAAAgB,GAAA,SAAApB,EAAAC,GACD,GAAAD,GAAA,IAAAC,EAAAM,OACDT,OAUED,EAAIO,MAAM,QAAS,wBAVjBiB,EAASA,SAAb,UAcAvB,EAAIU,OAAO,aAAc,CAAEc,KAAMrB,EAAK,SAJpCJ,OAAAA,KAAIO,cAAe,SAAAP,EAAAC,GACnB,IAAAsB,EAAOtB,EAAIuB,OAAAA,GADQE,EAEpB1B,EAAAiB,KAUGL,EAAO,CAAEM,SAZQQ,EAEpBR,SAUsBC,SAZFO,EAEpBP,SAUgCC,MAZZM,EAEpBN,MAUuCC,KAZnBK,EAEpBL,MAE0BI,WAAMrB,MAAI,kCAAA,CAAAQ,EAAAW,GAAA,SAAApB,GAArCA,EANFH,EAAAO,MAAA,QAAA,2BAAAJ,EAAAK,SAoBIR,EAAIO,MAAM,UAAW,6BARzBN,EAAQuB,SAAOF,cADwBzB,OAEJwB,IAFI,cAEJA,SAAAA,EAFIpB,GAGvC,IAAMW,EAAOZ,EAAAsB,OAAAC,GAAYJ,WAAQV,MAARU,iCAAZ,CAAAI,GAAA,SAAApB,GAAsBiB,EAAOC,EAAAA,MAAAA,QAAAA,yBAAAA,EAAAA,SAE1CnB,EAAAA,MAAWO,UAAM,yBAEbT,EAAAA,SAAU,cAsBhB2B,OAAOC,QAAU/B","file":"users.min.js","sourcesContent":["const express = require('express');\nconst router = express.Router();\nconst connection = require('../db');\n\n// Menampilkan daftar users\nrouter.get('/', (req, res) => {\n  connection.query('SELECT * FROM users ORDER BY id DESC', (err, rows) => {\n    if (err) {\n      console.log('Error:', err); // Tambahkan baris ini\n      req.flash('error', 'Gagal mengambil data: ' + err.message);\n      return res.redirect('/');\n    }\n\n    console.log('Data berhasil diambil:', rows.length); // Tambahkan baris ini\n\n    res.render('users/index', {\n      data: rows,\n      messages: {\n        success: req.flash('success'),\n        error: req.flash('error')\n      }\n    });\n  });\n});\n\n\n// Form tambah user\nrouter.get('/create', (req, res) => {\n  res.render('users/create');\n});\n\n// Simpan user baru\nrouter.post('/store', (req, res) => {\n  const { username, password, email, role } = req.body;\n  const data = { username, password, email, role };\n\n  connection.query('INSERT INTO users SET ?', data, (err) => {\n    if (err) {\n      req.flash('error', 'Gagal menyimpan data: ' + err.message);\n    } else {\n      req.flash('success', 'Berhasil menyimpan data');\n    }\n    res.redirect('/users');\n  });\n});\n\n// Form edit user\nrouter.get('/edit/:id', (req, res) => {\n  const id = req.params.id;\n\n  connection.query('SELECT * FROM users WHERE id = ?', [id], (err, rows) => {\n    if (err || rows.length === 0) {\n      req.flash('error', 'User tidak ditemukan');\n      return res.redirect('/users');\n    }\n\n    res.render('users/edit', { user: rows[0] });\n  });\n});\n\n// Update user\nrouter.post('/update/:id', (req, res) => {\n  const id = req.params.id;\n  const { username, password, email, role } = req.body;\n  const data = { username, password, email, role };\n\n  connection.query('UPDATE users SET ? WHERE id = ?', [data, id], (err) => {\n    if (err) {\n      req.flash('error', 'Gagal memperbarui data: ' + err.message);\n    } else {\n      req.flash('success', 'Berhasil memperbarui data');\n    }\n    res.redirect('/users');\n  });\n});\n\n// Hapus user\nrouter.get('/delete/:id', (req, res) => {\n  const id = req.params.id;\n\n  connection.query('DELETE FROM users WHERE id = ?', [id], (err) => {\n    if (err) {\n      req.flash('error', 'Gagal menghapus data: ' + err.message);\n    } else {\n      req.flash('success', 'Data berhasil dihapus');\n    }\n    res.redirect('/users');\n  });\n});\n\nmodule.exports = router;\n"]}